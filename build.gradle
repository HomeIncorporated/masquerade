/*
 * Copyright (c) 2008-2017 Haulmont.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

allprojects {
    group 'com.haulmont.masquerade'

    if (rootProject.hasProperty('buildVersion')) {
        version rootProject.buildVersion
    } else {
        version '1.0-SNAPSHOT'
    }

    repositories {
        if (System.getenv('HAULMONT_REPOSITORY_URL') != null) {
            maven {
                url System.getenv('HAULMONT_REPOSITORY_URL')
                credentials {
                    username System.getenv('HAULMONT_REPOSITORY_USER')
                    password System.getenv('HAULMONT_REPOSITORY_PASSWORD')
                }
            }
        } else {
            mavenCentral()
        }
    }
}

configure([project(':masquerade-web'), project(':masquerade-connector')]) {
    apply plugin: 'java'
    apply plugin: 'maven'

    sourceCompatibility = 1.8

    task sourceJar(type: Jar) {
        from sourceSets.main.java
        from sourceSets.main.resources
        classifier = 'sources'
    }

    artifacts {
        archives sourceJar
    }

    if (rootProject.hasProperty('uploadUrl')) {
        configurations {
            deployerJars
        }

        dependencies {
            deployerJars('org.apache.maven.wagon:wagon-http:2.12')
        }

        def uploadUrl = rootProject.uploadUrl
        def uploadUser = rootProject.uploadUser
        def uploadPassword = rootProject.uploadPassword

        uploadArchives.configure {
            repositories.mavenDeployer {
                name = 'httpDeployer'
                configuration = configurations.deployerJars
                repository(url: uploadUrl) {
                    authentication(userName: uploadUser, password: uploadPassword)
                }
            }
        }
    }

    build.dependsOn javadoc
}

configure(project(':masquerade-connector')) {
    dependencies {
        compile 'com.squareup.retrofit2:retrofit:2.4.0'
        compile 'com.squareup.retrofit2:converter-gson:2.4.0'
        compile 'com.google.guava:guava:24.1-jre'
        compile 'org.slf4j:slf4j-api:1.7.25'

        testCompile 'junit:junit:4.12'
        testCompile 'org.slf4j:slf4j-simple:1.7.25'
    }
}

configure(project(':masquerade-web')) {
    apply plugin: 'groovy'

    dependencies {
        compile 'com.leacox.motif:motif:0.1'
        compile 'com.codeborne:selenide:5.2.3'
        compile 'org.seleniumhq.selenium:selenium-java:3.141.59'

        testCompile 'org.codehaus.groovy:groovy-all:2.4.14'
        testCompile 'junit:junit:4.12'
        testCompile 'org.slf4j:slf4j-simple:1.7.25'
    }
}